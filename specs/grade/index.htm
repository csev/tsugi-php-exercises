<!DOCTYPE html>
<html>
<head>
<title>Assignment: Inside the Tsugi Grade Tool</title>
<style>
li {padding-top: 0.5em;}
pre {padding-left: 2em;}
</style>
</head>
<body style="margin-left:5%; margin-bottom: 60px; margin-right: 5%; font-family: sans-serif;">
<h1>Assignment: Inside the Tsugi Grade Tool</h1>
<p>
In this assignment we will make a small change to 
a simple Tsugi grade sending tool to make sure to never send
a lower grade (i.e. keep the highest grade).
</p>
<h1>Resources</h1>
<p>There are several resources you might find useful:
<ul>
<li> Previous Exercise: <a href="../install/index.htm">Installing Tsugi</a>
</li>
<li>Documentation: 
<a href="https://www.tsugi.org/lessons" target="_blank">Developing Tsugi Applications</a>
</li>
<li> Video:
<a href="https://www.youtube.com/watch?v=xMK8IjUQuz8&index=4&list=PLlRFEj9H3Oj5WZUjVjTJVBN18ozYSWMhw" target="_blank">
Developing the Tsugi Attendance Tool
</a>
</li>
<li> <a href="http://do1.dr-chuck.com/tsugi/phpdoc/" target="_blank">
Tsugi API Documentation
</a>
</li>
</ul>
</p>
<h1>Assignment Details</h1>
<p>
One you have successfully credited the tables and have the database connection working, 
go to the <b>Developer</b> option.  
You only see the <b>Developer</b> option in the Tsugi interface if you set the 
<pre>
$CFG-&gt;DEVELOPER = true;
</pre>
in your <b>config.php</b>.
If you are challenged for a secret to go into <b>Developer</b> mode - 
it is usually "secret" unless you have changed it during installation.
</p>
<p>
Developer mode is a way to quickly test Tsugi tools without using a Learning
Management System like Moodle, Canvas or Sakai.  Developer mode is like
a minature built-in LMS with an instructor and two student accounts
pre-configured.
</p>
<p>
Once you are in Developer mode, you can pick the tool you want to launch using
the <b>Tool</b> drop-down menu:
<p>
<center><img src="01-Developer-Mode.png" style="width: 90%; border: 1px solid black"></center>
</p>
You will see two grade applications.  One is <b>samples/grade/index.php</b> and the 
other is <b>exercises/grade/index.php</b>.   Both of these test an API and web 
service that allows these tools to send a grade back to the learning 
management system using IMS Learning Tools Interoperability.
</p>
<p>
If you play with the application under samples, you will see that it 
sends any grade between 0.0 and 1.0 inclusive.  So grades can go up 
and down.   Tsugi retains the most recently sent grade in the 
table <b>lti_result</b>.   You can verify the grade that was sent by checking 
this table each time you run <b>sample/grade/index.php</b>.  This previous 
grade is available to the application in the global 
variable <b>$LINK-&gt;grade</b> as you can see in the <b>var_dump()</b> of the Tsugi 
global objects in the grade code.
</p>
<p>
If you play with the application code under <b>exercises/grade/index.php</b> you 
will see that it sends all grades above 0.5 and does not send any grade 
below 0.5.   You can test the code by first trying to send "0.4" as 
the grade and it will claim that the grade has already been sent.  
Then try to send "0.7" and it will send the grade.   Then try to send 
"0.6" as the grade and it will send the grade.
</p>
<p>
This is the flaw/problem/issue with the <b>exercises/grade/index.php</b>.   
It has hard coded the "old value" to always be "0.5". 
</p>
<h2>What to Modify</h2>
<p>
The goal of this program is to make it so that the system never sends back 
a lower grade than a grade previously sent and stored.   You will find 
the previous grade in the <b>$LINK-&gt;grade</b>.   If the new grade is not 
higher than the previous grade you will put out a message a message.   
For example if the following sequence were entered, it should have these results:
<pre>
0.2  (sent)
0.1  (not sent)
0.6 (sent)
0.7 (sent)
0.6 (not sent)
</pre>
The code in Github is fully functional except it always hard-codes 
the "previous grade" to 0.5.  
</p>
<p>
<center><img src="02-Grade-Not-Sent.png" style="width: 90%; border: 1px solid black"></center>
</p>
<p>
Once you have tested your application, you will want to set the grade 
back to zero.  You can enter "0.0" as the grade to reset it back to zero.  
The application sends the zero.  You can also change the grade in the 
<b>lti_result</b> table and then press "Refresh" on the grade code in your browser 
to re-load the "old grade" into <b>$RESULT->grade</b> â€“ when in doubt scroll down 
and see the old grade in the <b>var_dump()</b> output.
</p>
<h1>What to Hand In</h1>
<p>
For this assignment you will hand in:
<ol>
<li>The source code of your modified <b>index.php</b></li>
<li>Enter a grade of 0.1 and take a screen shot of it sending the grade</li>
<li>Enter a grade of 0.7 and take a screen shot showing it sending the grade</li>
<li>Enter a grade of 0.6 and show it not sending the grade (since 0.7 was already sent)</li>
<li>Show a screen shot of the <b>lti_result</b> table with the 0.7 grade in the field.  
Don't worry if the <b>lti_result</b> table has more than one record - it will have a 
record for each tool/user combination that you launch in the interface.</li>
</ol>
Your name should be on all of the screen shots except for the PHPMyAdmin screen shot.
<h1>Sample Screen Shots</h1>
<p>
The Tsugi <b>lti_result</b> table in PHPMyAdmin:
</p>
<p>
<center><img src="03-Tsugi-Result.png" style="width: 90%; border: 1px solid black"></center>
</p>
<p>
Provided by: <a href="http://www.php-intro.com/" target="_blank">
www.tsugi.org</a> <br/>
</p>
<center>
Copyright Creative Commons Attribution
</center>
</body>
</html>
